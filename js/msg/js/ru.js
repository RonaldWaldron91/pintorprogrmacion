// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ru');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_ARG = "Add Argument";  // untranslated
Blockly.Msg.ADD_ARGS = "Add Arguments";  // untranslated
Blockly.Msg.ADD_COMMENT = "Добавить комментарий";
Blockly.Msg.ANALOG_READ = "analog Read";  // untranslated
Blockly.Msg.ANALOG_WRITE = "analog Write";  // untranslated
Blockly.Msg.ANGLE = " angle";  // untranslated
Blockly.Msg.ARCOIRIS = "Rainbow";  // untranslated
Blockly.Msg.AUTH = "Пожалуйста, авторизуйте это приложение, чтоб можно было сохранять вашу работу и чтобы дать возможность вам делиться ей.";
Blockly.Msg.BLACK = "BLACK";  // untranslated
Blockly.Msg.BLINK = "Blink ";  // untranslated
Blockly.Msg.BOOLEAN = "boolean";  // untranslated
Blockly.Msg.BOOLEANO = "Boolean";  // untranslated
Blockly.Msg.BY = "by";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Измените значение:";
Blockly.Msg.CHAR = "Character";  // untranslated
Blockly.Msg.CHAT = "Общайтесь со своим коллегой, печатая в этом поле!";
Blockly.Msg.CLEAN_UP = "Убрать блоки";
Blockly.Msg.CLICKDER = "Right_Click";  // untranslated
Blockly.Msg.CLICKIZQ = "Left_Click";  // untranslated
Blockly.Msg.CLICKMID = "Middle_Click";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Свернуть блоки";
Blockly.Msg.COLLAPSE_BLOCK = "Свернуть блок";
Blockly.Msg.COLOR = " colour";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "цвет 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "цвет 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "доля цвета 1";
Blockly.Msg.COLOUR_BLEND_TITLE = "смешать";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ru.wikipedia.org/wiki/Цвет";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Выберите цвет из палитры.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "случайный цвет";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Выбирает цвет случайным образом.";
Blockly.Msg.COLOUR_RGB_BLUE = "синего";
Blockly.Msg.COLOUR_RGB_GREEN = "зелёного";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "красного";
Blockly.Msg.COLOUR_RGB_TITLE = "цвет из";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Создаёт цвет с указанной пропорцией  красного, зеленого и синего.  Все значения должны быть между 0 и 100.";
Blockly.Msg.COMENTARIO = "Comment";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "выйти из цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "перейти к следующему шагу цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Прерывает этот цикл.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропускает остаток цикла и переходит к следующему шагу.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Предупреждение: этот блок может использоваться только внутри цикла.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "для каждого элемента %1 в списке %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "цикл по %1 от %2 до %3 с шагом %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Добавляет условие к блоку \"если\"";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Добавить заключительный подблок для случая, когда все условия ложны.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "иначе";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "иначе если";
Blockly.Msg.CONTROLS_IF_MSG_IF = "если";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Если условие истинно, выполняет команды.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "выполнить";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторить %1 раз";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Выполняет некоторые команды несколько раз.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторять, пока не";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторять, пока";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Пока значение ложно, выполняет команды";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Пока значение истинно, выполняет команды.";
Blockly.Msg.COUNTER = "Counter";  // untranslated
Blockly.Msg.CUMPLEANOS = "Birthday";  // untranslated
Blockly.Msg.DECLARACIONES = "Statements";  // untranslated
Blockly.Msg.DECR_CONT = "Decrement";  // untranslated
Blockly.Msg.DELAY = "Delay";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Удалить блок";
Blockly.Msg.DELETE_X_BLOCKS = "Удалить %1 блоков";
Blockly.Msg.DER = "RT";  // untranslated
Blockly.Msg.DIFFERENTTO = "Different to";  // untranslated
Blockly.Msg.DIGITAL_READ = "digital Read";  // untranslated
Blockly.Msg.DIGITAL_WRITE = "digital Write";  // untranslated
Blockly.Msg.DIRECCION = "direction";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Отключить блок";
Blockly.Msg.DISTANCE = "distance";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Скопировать";
Blockly.Msg.DURACION = "duration";  // untranslated
Blockly.Msg.EJE_X = "axis x";  // untranslated
Blockly.Msg.EJE_Y = "axis y";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Включить блок";
Blockly.Msg.EQUALTO = "Equal to";  // untranslated
Blockly.Msg.EXPAND_ALL = "Развернуть блоки";
Blockly.Msg.EXPAND_BLOCK = "Развернуть блок";
Blockly.Msg.EXTERNAL_INPUTS = "Вставки снаружи";
Blockly.Msg.FIN_CODE_PYGMO = "       End";  // untranslated
Blockly.Msg.FLOAT = "float";  // untranslated
Blockly.Msg.FOR = "Count with";  // untranslated
Blockly.Msg.FOREVER = "Forever                                  ";  // untranslated
Blockly.Msg.FORWARD = "FORWARD";  // untranslated
Blockly.Msg.FRECUENCY = "frecuency";  // untranslated
Blockly.Msg.FROM = "from";  // untranslated
Blockly.Msg.FUNCTION = "Function";  // untranslated
Blockly.Msg.FUNCTIONWIHTRETURN = "Return Function";  // untranslated
Blockly.Msg.GOFORWARD = "go Forward ";  // untranslated
Blockly.Msg.GOREVERSE = "go Reverse ";  // untranslated
Blockly.Msg.GREATEROREQUAL = "Grater or Equal to";  // untranslated
Blockly.Msg.GREATERTHAN = "Greater than";  // untranslated
Blockly.Msg.HELP = "Справка";
Blockly.Msg.HIGH = "HIGH";  // untranslated
Blockly.Msg.INCR_CONT = "Increase";  // untranslated
Blockly.Msg.INICIO_CODE = "Starting program";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Вставки внутри";
Blockly.Msg.INPUT = "INPUT";  // untranslated
Blockly.Msg.INPUT_PULLUP = "INPUT_PULLUP";  // untranslated
Blockly.Msg.INT = "int";  // untranslated
Blockly.Msg.INVERTIR = "Reverse motion";  // untranslated
Blockly.Msg.IZQ = "LFT";  // untranslated
Blockly.Msg.KEYBOARD_BEGIN = "Keyboard begin";  // untranslated
Blockly.Msg.KEYBOARD_PRINT = "Keyboard print";  // untranslated
Blockly.Msg.KEYBOARD_TEXT = "Write one key";  // untranslated
Blockly.Msg.LEDOFF = "LED Off";  // untranslated
Blockly.Msg.LEDON = "LED On";  // untranslated
Blockly.Msg.LENGTH = "length";  // untranslated
Blockly.Msg.LESSOEQUAL = "Less or Equal to";  // untranslated
Blockly.Msg.LESSTHAN = "Less than";  // untranslated
Blockly.Msg.LIBRERIA = "Library";  // untranslated
Blockly.Msg.LIBRERIA_TEXT = "Write the Library'name";  // untranslated
Blockly.Msg.LINEA_CODIGO = "Line Code";  // untranslated
Blockly.Msg.LINECOMPARE = "line Compare";  // untranslated
Blockly.Msg.LINEREAD = "line Read";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "создать пустой список";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Возвращает список длины 0, не содержащий данных";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "создать список из";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Добавляет элемент к списку.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Создаёт список с любым числом элементов.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "первый";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "№ с конца";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "взять";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "взять и удалить";
Blockly.Msg.LISTS_GET_INDEX_LAST = "последний";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "произвольный";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "удалить";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Возвращает элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Удаляет и возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Удаляет и возвращает элемент в указанной позиции списка (№1 -  последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Удаляет и возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Удаляет и возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Удаляет и возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Удаляет первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Удаляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Удаляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Удаляет последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Удаляет случайный элемент списка.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "по № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "по №";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "по последний";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "взять подсписок с первого";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "взять подсписок с № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "взять подсписок с №";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Создаёт копию указанной части списка.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "найти первое вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "найти последнее вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает 0, если элемент не найден.";
Blockly.Msg.LISTS_INLIST = "в списке";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Возвращает значение истина, если список пуст.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "длина %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Возвращает длину списка.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "создать список из элемента %1, повторяющегося %2 раз";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Создаёт список, состоящий из заданного числа копий элемента.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "=";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставить в";
Blockly.Msg.LISTS_SET_INDEX_SET = "присвоить";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляет элемент в начало списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Вставляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Вставляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Добавляет элемент в конец списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Вставляет элемент в случайное место в списке.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Присваивает значение первому элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Присваивает значение элементу в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Присваивает значение элементу в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Присваивает значение последнему элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Присваивает значение случайному элементу списка.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "сделать список из текста";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "собрать текст из списка";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Соединяет сптсок текстов в один текст с разделителями.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Разбивает текст в список текстов, по разделителям.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "с разделителем";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ложь";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Возвращает значение истина или ложь.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "истина";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Возвращает значение истина, если вставки равны.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Возвращает значение истина, если первая вставка больше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Возвращает значение истина, если первая вставка больше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Возвращает значение истина, если первая вставка меньше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Возвращает значение истина, если вставки не равны.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Возвращает значение истина, если вставка ложна.  Возвращает значение ложь, если вставка истинна.";
Blockly.Msg.LOGIC_NULL = "ничто";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Возвращает ничто.";
Blockly.Msg.LOGIC_OPERATION_AND = "и";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "или";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Возвращает значение истина, если обе вставки истинны.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "выбрать по";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "если ложь";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "если истина";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
Blockly.Msg.LOOP = "Loop         ";  // untranslated
Blockly.Msg.LOW = "LOW";  // untranslated
Blockly.Msg.LUZ = "light";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ru.wikipedia.org/wiki/Арифметика";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Возвращает сумму двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Возвращает частное от деления первого числа на второе.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Возвращает разность двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Возвращает произведение двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Возвращает первое число, возведённое в степень второго числа.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
Blockly.Msg.MATH_CHANGE_TITLE = "увеличить %1 на %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Добавляет число к переменной '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ru.wikipedia.org/wiki/Математическая_константа";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "ограничить %1 снизу %2 сверху %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ограничивает число нижней и верхней границами (включительно).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "делится на";
Blockly.Msg.MATH_IS_EVEN = "чётное";
Blockly.Msg.MATH_IS_NEGATIVE = "отрицательное";
Blockly.Msg.MATH_IS_ODD = "нечётное";
Blockly.Msg.MATH_IS_POSITIVE = "положительное";
Blockly.Msg.MATH_IS_PRIME = "простое";
Blockly.Msg.MATH_IS_TOOLTIP = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
Blockly.Msg.MATH_IS_WHOLE = "целое";
Blockly.Msg.MATH_MODULO_HELPURL = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
Blockly.Msg.MATH_MODULO_TITLE = "остаток от %1 : %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Возвращает остаток от деления двух чисел.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://ru.wikipedia.org/wiki/Число";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "среднее арифметическое списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "наибольшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медиана списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "наименьшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моды списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "случайный элемент списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартное отклонение списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сумма списка";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Возвращает среднее арифметическое списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Возвращает наибольшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Возвращает медиану списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Возвращает наименьшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Возвращает список наиболее часто встречающихся элементов списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Возвращает стандартное отклонение списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Возвращает сумму всех чисел в списке.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "случайное число от 0 (включительно) до 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "случайное целое число от %1 для %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Возвращает случайное число между двумя заданными пределами (включая и их).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://ru.wikipedia.org/wiki/Округление";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлить";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "округлить к меньшему";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "округлить к большему";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Округляет число до большего или меньшего.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://ru.wikipedia.org/wiki/Квадратный_корень";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратный корень";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Возвращает модуль числа";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Возвращает е в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Возвращает натуральный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Возвращает десятичный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Возвращает противоположное число.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Возвращает 10 в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Возвращает квадратный корень числа.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Возвращает арккосинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Возвращает арксинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Возвращает арктангенс (в градусах)";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Возвращает косинус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Возвращает синус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Возвращает тангенс угла в градусах.";
Blockly.Msg.ME = "Мне";
Blockly.Msg.MICROSEGUNDOS = "microseconds";  // untranslated
Blockly.Msg.MILISEGUNDOS = "miliseconds";  // untranslated
Blockly.Msg.MILLIS = "Elapsed milliseconds";  // untranslated
Blockly.Msg.MODE = "mode";  // untranslated
Blockly.Msg.MOTORS_OFF = "motors Off ";  // untranslated
Blockly.Msg.MOTOR_OFF = "motor Off";  // untranslated
Blockly.Msg.MOTOR_ON = "motor On";  // untranslated
Blockly.Msg.MOTOR_SPEED = "motor Speed";  // untranslated
Blockly.Msg.MOUSE_BEGIN = "Mouse begin";  // untranslated
Blockly.Msg.MOUSE_MOVE = "Mouse move";  // untranslated
Blockly.Msg.NAMEINIT = "name";  // untranslated
Blockly.Msg.NAVIDAD = "Christmas";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Новая переменная…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Имя новой переменной:";
Blockly.Msg.NOTA = "note";  // untranslated
Blockly.Msg.NO_TONE = "No tone";  // untranslated
Blockly.Msg.NUMERIC = "Number";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "OUTPUT";  // untranslated
Blockly.Msg.OWNCODE = "Write your own code";  // untranslated
Blockly.Msg.PINMODE = "pin Mode";  // untranslated
Blockly.Msg.PIROGAMES = "Pyrotechnic Games";  // untranslated
Blockly.Msg.POLICIA = "Police";  // untranslated
Blockly.Msg.PORT = " port";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "разрешить операторы";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Создать вызов '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "выполнить что-то";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "чтобы";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Создаёт процедуру, не возвращающую значение.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "вернуть";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Создаёт процедуру, возвращающую значение.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Предупреждение: эта функция имеет повторяющиеся параметры.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Выделить определение процедуры";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Если первое значение истинно, возвращает второе значение.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "имя параметра:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Добавить входной параметр в функцию.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "параметры";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
Blockly.Msg.PULSEIN = "Pulse In";  // untranslated
Blockly.Msg.PYGMO_BLACK = "Black";  // untranslated
Blockly.Msg.PYGMO_BUTTON = " If button in location ";  // untranslated
Blockly.Msg.PYGMO_BUTTON_EQUAL = " is equal to";  // untranslated
Blockly.Msg.PYGMO_CIRCLE = "Circle";  // untranslated
Blockly.Msg.PYGMO_DERECHO = " right";  // untranslated
Blockly.Msg.PYGMO_DO = "Do";  // untranslated
Blockly.Msg.PYGMO_ElSE = "Else";  // untranslated
Blockly.Msg.PYGMO_FOLLOWER = "Follow line";  // untranslated
Blockly.Msg.PYGMO_FORWARD = "Forward";  // untranslated
Blockly.Msg.PYGMO_HIGH = "High";  // untranslated
Blockly.Msg.PYGMO_INTERSECCION = "If found intersection color  ";  // untranslated
Blockly.Msg.PYGMO_LEFT = "Left";  // untranslated
Blockly.Msg.PYGMO_LIGHTFOLLOWER = "Light Follower -Range ";  // untranslated
Blockly.Msg.PYGMO_LIGHTIF = "If light sensor left";  // untranslated
Blockly.Msg.PYGMO_LOW = "Low";  // untranslated
Blockly.Msg.PYGMO_MAX = "Highest";  // untranslated
Blockly.Msg.PYGMO_MEDIUM = "Medium";  // untranslated
Blockly.Msg.PYGMO_MOVE = "Move";  // untranslated
Blockly.Msg.PYGMO_OBSTACULO = "If there is a obstacle ";  // untranslated
Blockly.Msg.PYGMO_REVERSE = "Reverse";  // untranslated
Blockly.Msg.PYGMO_RIGHT = "Right";  // untranslated
Blockly.Msg.PYGMO_SECONDS = " second(s)";  // untranslated
Blockly.Msg.PYGMO_SKATE = "Snake  ";  // untranslated
Blockly.Msg.PYGMO_SPEED = "Speed";  // untranslated
Blockly.Msg.PYGMO_SPEEDBLOCK = "Motor Speed  left";  // untranslated
Blockly.Msg.PYGMO_STEPS = "Amount of times  ";  // untranslated
Blockly.Msg.PYGMO_STOP = "Stop";  // untranslated
Blockly.Msg.PYGMO_TIME = "Time";  // untranslated
Blockly.Msg.PYGMO_TIMES = " times";  // untranslated
Blockly.Msg.PYGMO_TURN = "Turn ";  // untranslated
Blockly.Msg.PYGMO_WAIT = "Wait";  // untranslated
Blockly.Msg.PYGMO_WHITE = "White";  // untranslated
Blockly.Msg.RACE = "Race";  // untranslated
Blockly.Msg.RANGO = "range";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Удалить комментарий";
Blockly.Msg.RENAME_VARIABLE = "Переименовать переменную…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Переименовать все переменные '%1' в:";
Blockly.Msg.RETURN = "Return";  // untranslated
Blockly.Msg.REVERSE = "REVERSE";  // untranslated
Blockly.Msg.SEGUNDOS = "seconds";  // untranslated
Blockly.Msg.SENSORREAD = "sensor Read";  // untranslated
Blockly.Msg.SERIAL_AVAILABLE = "Bytes available into Serial";  // untranslated
Blockly.Msg.SERIAL_BEGIN = "Serial begin ";  // untranslated
Blockly.Msg.SERIAL_PRINT = "Serial println";  // untranslated
Blockly.Msg.SERIAL_READ = "Read Serial ";  // untranslated
Blockly.Msg.SET = "Set";  // untranslated
Blockly.Msg.SET_UP = "Set_up      ";  // untranslated
Blockly.Msg.SPEED = "speed";  // untranslated
Blockly.Msg.STEPS = "steps";  // untranslated
Blockly.Msg.STRING = "String";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "добавить текст";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "к";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Добавить текст к переменной «%1».";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "в строчные буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "в Заглавные Начальные Буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "в ЗАГЛАВНЫЕ БУКВЫ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
Blockly.Msg.TEXT_CHARAT_FIRST = "взять первую букву";
Blockly.Msg.TEXT_CHARAT_FROM_END = "взять букву № с конца";
Blockly.Msg.TEXT_CHARAT_FROM_START = "взять букву №";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_CHARAT_LAST = "взять последнюю букву";
Blockly.Msg.TEXT_CHARAT_RANDOM = "взять случайную букву";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Возвращает букву в указанной позиции.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Добавить элемент к тексту.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "соединить";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "по букву № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "по букву №";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "по последнюю букву";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "в тексте";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "взять подстроку с первой буквы";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "взять подстроку с буквы № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "взять подстроку с буквы №";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Возвращает указанную часть текста.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "найти первое вхождение текста";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "найти последнее вхождение текста";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает 0, если текст не найден.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Возвращает значение истина, если предоставленный текст пуст.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "создать текст из";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Создаёт фрагмент текста, объединяя любое число элементов";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "длина %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Возвращает число символов (включая пробелы) в заданном тексте.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "напечатать %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Печатает текст, число или другой объект.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запросить у пользователя число.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запросить у пользователя текст.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запросить число с подсказкой";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запросить текст с подсказкой";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://ru.wikipedia.org/wiki/Строковый_тип";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Буква, слово или строка текста.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "обрезать пробелы с двух сторон";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "обрезать пробелы слева";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "обрезать пробелы справа";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Возвращает копию текста с пробелами, удалеными с одного или обоих концов.";
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Сегодня";
Blockly.Msg.TONE = "Tone";  // untranslated
Blockly.Msg.TOOLTIP_ANALOGREAD = "Check the analog pin'state";  // untranslated
Blockly.Msg.TOOLTIP_ANALOGWRITE = "Write in a analog pin";  // untranslated
Blockly.Msg.TOOLTIP_BOOLEAN = "Write true/false";  // untranslated
Blockly.Msg.TOOLTIP_CHAR = "Write only one character";  // untranslated
Blockly.Msg.TOOLTIP_COMENTARIO = "Write a comment";  // untranslated
Blockly.Msg.TOOLTIP_COUNTERDECLARATION = "Declare one counter";  // untranslated
Blockly.Msg.TOOLTIP_DECLARARVECTOR = "Write the vector's length";  // untranslated
Blockly.Msg.TOOLTIP_DECRCOUNTER = "Decrement variable'value";  // untranslated
Blockly.Msg.TOOLTIP_DELAY = "Pause the program for a determinated time (ms)";  // untranslated
Blockly.Msg.TOOLTIP_DIGITALREAD = "Check the digital pin'state";  // untranslated
Blockly.Msg.TOOLTIP_DIGITALWRITE = "Write in a digital pin  HIGH or LOW";  // untranslated
Blockly.Msg.TOOLTIP_ESPECIALCODIGO = "Press over the space to write a code manually";  // untranslated
Blockly.Msg.TOOLTIP_FUNCIONCONRETURN = "Declare one function whit return.Press over icon to add arguments";  // untranslated
Blockly.Msg.TOOLTIP_FUNCIONSINRETURN = "Declare one function whithout return.Press over icon to add arguments";  // untranslated
Blockly.Msg.TOOLTIP_GETFUNCTION = "Use a determinated function whit return, which was declarated formerly";  // untranslated
Blockly.Msg.TOOLTIP_GETVAR = "Invoke variable";  // untranslated
Blockly.Msg.TOOLTIP_GETVECTOR = "Write the position where you want to get the stored value";  // untranslated
Blockly.Msg.TOOLTIP_GOFORWARD = "Turn on two motors forward";  // untranslated
Blockly.Msg.TOOLTIP_GOREVERSE = "Turn off two motors backward";  // untranslated
Blockly.Msg.TOOLTIP_INCRCOUNTER = "Increase variable'value";  // untranslated
Blockly.Msg.TOOLTIP_INICIALIZARVECTOR = "Write the vector's initial values. Press over button to add more arguments";  // untranslated
Blockly.Msg.TOOLTIP_KEYBOARDBEGIN = "Send a key";  // untranslated
Blockly.Msg.TOOLTIP_KEYBOARDINIT = "Initialize keyboard mode";  // untranslated
Blockly.Msg.TOOLTIP_LIBRERIA = "Declare some library that you want to use.";  // untranslated
Blockly.Msg.TOOLTIP_LINEACODIGO = "Use this block to write one code line manually";  // untranslated
Blockly.Msg.TOOLTIP_LINECOMPARE = "Set line sensor' threshold, to choose between white or black";  // untranslated
Blockly.Msg.TOOLTIP_LINEREAD = "Check line sensor' state";  // untranslated
Blockly.Msg.TOOLTIP_MOTOROFF = "Turn off one motor";  // untranslated
Blockly.Msg.TOOLTIP_MOTORON = "Turn on one motor";  // untranslated
Blockly.Msg.TOOLTIP_MOTORSOFF = "Turn off two motors";  // untranslated
Blockly.Msg.TOOLTIP_MOTORSPEED = "Change the motor'speed with a value between";  // untranslated
Blockly.Msg.TOOLTIP_MOUSEINIT = "Initialize mouse mode";  // untranslated
Blockly.Msg.TOOLTIP_MOUSEMOVE = "Send coordinates to move mouse";  // untranslated
Blockly.Msg.TOOLTIP_NOTONE = "Turn off a tone, which was generated formerly";  // untranslated
Blockly.Msg.TOOLTIP_NUMERICVAR = "Use a numeric value";  // untranslated
Blockly.Msg.TOOLTIP_PARAMETRO = "Add some argument to your functions";  // untranslated
Blockly.Msg.TOOLTIP_PINMODE = "Set behavior of a pin Input/Output";  // untranslated
Blockly.Msg.TOOLTIP_SENSORREAD = "Check line sensor' analog state";  // untranslated
Blockly.Msg.TOOLTIP_SERIALAVAILABLE = "Get the number of bytes available for reading";  // untranslated
Blockly.Msg.TOOLTIP_SERIALBEGIN = "Initialize the serial communication";  // untranslated
Blockly.Msg.TOOLTIP_SERIALPRINT = "Send a determinated value through serial communication";  // untranslated
Blockly.Msg.TOOLTIP_SERIALREAD = "Read the first byte available";  // untranslated
Blockly.Msg.TOOLTIP_SETFUNCTION = "Use a determinated function whitout return, which was declarated formerly";  // untranslated
Blockly.Msg.TOOLTIP_SETVAR = "Modify a varible'value";  // untranslated
Blockly.Msg.TOOLTIP_SETVECTOR = "Write the position and the value which you want to store";  // untranslated
Blockly.Msg.TOOLTIP_STRINGVAR = "Write a String/text";  // untranslated
Blockly.Msg.TOOLTIP_TONE = "Generate a tone in a determinated pin and frecuency";  // untranslated
Blockly.Msg.TOOLTIP_TURNGHT = "first motor is on the left and the second is on the right";  // untranslated
Blockly.Msg.TOOLTIP_TURNLEFT = "first motor is on the left and the second is on the right";  // untranslated
Blockly.Msg.TOOLTIP_ULTRASOUNDREAD = "Check the ultra sound sensor";  // untranslated
Blockly.Msg.TOOLTIP_VARDECLARATION = "Declare one variable";  // untranslated
Blockly.Msg.TOOTTIP_CIRCLE = "Choose velocity, direction and time";  // untranslated
Blockly.Msg.TURNOFF = "Turn off";  // untranslated
Blockly.Msg.TURN_LEFT = "turn Left";  // untranslated
Blockly.Msg.TURN_RIGHT = "turn Right";  // untranslated
Blockly.Msg.TYPE = "type";  // untranslated
Blockly.Msg.ULTRASOUNDREAD = "ultrasound Read";  // untranslated
Blockly.Msg.VALUE = "value";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "элемент";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Создать блок \"присвоить\" для %1";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Возвращает значение этой переменной.";
Blockly.Msg.VARIABLES_SET = "присвоить %1 = %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Создать вставку %1";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Присваивает переменной значение вставки.";
Blockly.Msg.WHEEL = "wheel";  // untranslated
Blockly.Msg.WHITE = "WHITE";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;